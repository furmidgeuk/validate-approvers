name: Auto Assign Reviewers

on:
  pull_request:
    types: [opened, reopened, ready_for_review]

# Add permissions block to request necessary access levels
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  jobs:
  assign-reviewers:
    runs-on: ubuntu-latest
    steps:
      - name: Assign team based on target branch
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.number;
            const targetBranch = context.payload.pull_request.base.ref;
            
            console.log(`PR #${prNumber} targets branch: ${targetBranch}`);
            
            let teamToAssign = '';

            // Use the actual team slugs as per your organization
            const smeTeamSlug = 'nn-datacore-it-sme';
            const qualityTeamSlug = 'nn-datacore-qualification-team';
            
            if (targetBranch === 'SME-Approval') {
              teamToAssign = smeTeamSlug;
            } else if (targetBranch === 'main') {
              teamToAssign = qualityTeamSlug;
            }

            if (!teamToAssign) {
              console.log(`No team assignments for target branch: ${targetBranch}`);
              return;
            }

            try {
              await github.rest.pulls.requestReviewers({
                owner,
                repo,
                pull_number: prNumber,
                team_reviewers: [teamToAssign]
              });

              const label = targetBranch === 'SME-Approval' ? 'needs-sme-review' : 'needs-quality-review';
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: prNumber,
                labels: [label]
              });

              const comment = targetBranch === 'SME-Approval'
                ? 'This PR requires 2 approvals from the SME team before it can be merged to the SME-Approval branch.'
                : 'This PR requires approval from the Quality team before it can be merged to main.';

              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: prNumber,
                body: comment
              });

            } catch (error) {
              console.error(`Error assigning reviewers: ${error.message}`);
              console.log(`Error details: ${JSON.stringify(error)}`);
            }
